
DNS host entries:
* Will have to find a way to add /etc/hosts file with the proper entries.


Outside access:
* Will have to find a way to temporarily allow access to outside world for the purposes of remote configuration management and close it once done.
* For the purposes of testing we will have to allow outside access for now.

OR ansible provisioning through a jump server:
* Will have to check ansible provisioning through a jump server.
* OR use python fabric to write code to provision through a jump server.

NAT Gateway:
* Implementation of NAT GW SGs.


##########################################################################################


v0.2.1

* Test the ansible part of the deployment. working

v0.2.2
* Move the permanent resources i.e vpc, igw, subnets, routing table, nacl, security groups along with s3 bucket and iam configuration to a separate directory out of tf_jenkins_master_node and create it as shared resources.

v0.2.3
* Edit the forks to have parallel ansible operations.

v0.4.0
* Keep ec2 instance and the s3 bucket in sync with ansible.
* Edit the crontab file with the aws s3 sync command and place it in the master instance at start.
* Perform a sync with the S3 using the crontab whenever the instance is about to get destroyed.
* Next time the instance is spun up it should automatically get synced with the S3 bucket and download the jenkins conf files.


v0.4.1
* Allow S3 bucket access only to the ec2 instance being created. No outside access.




